{"ast":null,"code":"var _jsxFileName = \"/Users/mathilde/Documents/kode/madplan/src/components/allRecipes.js\",\n    _s = $RefreshSig$();\n\nimport recipes from \"../data/recipes.json\";\nimport React, { useState } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport { Filter } from \"./filter\"; // function that maps out all of the recipes from the dat\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Recipes() {\n  _s();\n\n  const [myRecipes, setRecipes] = useState(recipes);\n\n  const filterRecipes = e => {\n    const search = e.target.value.toLowerCase();\n    const filteredRecipes = recipes.filter(recipe => recipe.ingredients.toLowerCase().includes(search));\n    setRecipes(filteredRecipes);\n  };\n\n  const showVegetarian = () => {\n    const meats = [\"oksekød\", \"kebab\", \"guanciale\", \"hakket oksekød\", \"kyllingefilet\", \"kyllingefileter\", \"kylling\", \"laks\", \"pølser\"];\n    const nonMeats = recipes.filter(recipe => !meats.some(value => recipe.ingredients.toLowerCase().includes(value)));\n    setRecipes(nonMeats);\n  };\n\n  const showPasta = () => {\n    const pastas = [\"pasta\", \"frisk pasta\", \"spaghetti\"];\n    const pastaDishes = recipes.filter(recipe => pastas.some(value => recipe.ingredients.toLowerCase().includes(value)));\n    setRecipes(pastaDishes);\n  };\n\n  const showRice = () => {\n    const rice = [\"ris,\", \"jasminris\"];\n    const riceDishes = recipes.filter(recipe => rice.some(value => recipe.ingredients.toLowerCase().match(value)));\n    setRecipes(riceDishes);\n  };\n\n  const showAll = () => {\n    setRecipes(recipes);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centeredContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"boxLarge\",\n        type: \"text\",\n        onChange: e => filterRecipes(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => showVegetarian(),\n        children: \"Vegetarretter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => showPasta(),\n        children: \"Pastaretter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => showRice(),\n        children: \"Risretter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => showAll(),\n        children: \"Alle retter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dishCardsContainer\",\n      children: myRecipes.map(recipe => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: \"dishCard\",\n            children: /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                className: \"dishCardTitle\",\n                children: recipe.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                className: \"dishCardText\",\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  children: recipe.ingredients\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 19\n              }, this), recipe.link != \"\" ? /*#__PURE__*/_jsxDEV(Card.Link, {\n                className: \"dishCardLink\",\n                href: recipe.link,\n                target: \"_blank\",\n                children: \"Se opskrift\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 21\n              }, this) : \"\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this)\n        }, recipe.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Recipes, \"5ZEILjZl+JNfZUXPbglG5NoT1qA=\");\n\n_c = Recipes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Recipes\");","map":{"version":3,"names":["recipes","React","useState","Card","Filter","Recipes","myRecipes","setRecipes","filterRecipes","e","search","target","value","toLowerCase","filteredRecipes","filter","recipe","ingredients","includes","showVegetarian","meats","nonMeats","some","showPasta","pastas","pastaDishes","showRice","rice","riceDishes","match","showAll","map","name","link","id"],"sources":["/Users/mathilde/Documents/kode/madplan/src/components/allRecipes.js"],"sourcesContent":["import recipes from \"../data/recipes.json\";\nimport React, { useState } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport { Filter } from \"./filter\";\n\n// function that maps out all of the recipes from the dat\n\nexport function Recipes() {\n  const [myRecipes, setRecipes] = useState(recipes);\n\n  const filterRecipes = (e) => {\n    const search = e.target.value.toLowerCase();\n    const filteredRecipes = recipes.filter((recipe) =>\n      recipe.ingredients.toLowerCase().includes(search)\n    );\n    setRecipes(filteredRecipes);\n  };\n\n  const showVegetarian = () => {\n    const meats = [\n      \"oksekød\",\n      \"kebab\",\n      \"guanciale\",\n      \"hakket oksekød\",\n      \"kyllingefilet\",\n      \"kyllingefileter\",\n      \"kylling\",\n      \"laks\",\n      \"pølser\",\n    ];\n    const nonMeats = recipes.filter(\n      (recipe) =>\n        !meats.some((value) => recipe.ingredients.toLowerCase().includes(value))\n    );\n    setRecipes(nonMeats);\n  };\n\n  const showPasta = () => {\n    const pastas = [\"pasta\", \"frisk pasta\", \"spaghetti\"];\n    const pastaDishes = recipes.filter((recipe) =>\n      pastas.some((value) => recipe.ingredients.toLowerCase().includes(value))\n    );\n    setRecipes(pastaDishes);\n  };\n\n  const showRice = () => {\n    const rice = [\"ris,\", \"jasminris\"];\n    const riceDishes = recipes.filter((recipe) =>\n      rice.some((value) => recipe.ingredients.toLowerCase().match(value))\n    );\n    setRecipes(riceDishes);\n  };\n\n  const showAll = () => {\n    setRecipes(recipes);\n  };\n\n  return (\n    <div>\n      <div className=\"centeredContainer\">\n        <input\n          className=\"boxLarge\"\n          type=\"text\"\n          onChange={(e) => filterRecipes(e)}\n        ></input>\n        <button onClick={() => showVegetarian()}>Vegetarretter</button>\n        <button onClick={() => showPasta()}>Pastaretter</button>\n        <button onClick={() => showRice()}>Risretter</button>\n        <button onClick={() => showAll()}>Alle retter</button>\n      </div>\n      <div className=\"dishCardsContainer\">\n        {myRecipes.map((recipe) => {\n          return (\n            <div key={recipe.id}>\n              <Card className=\"dishCard\">\n                <Card.Body>\n                  <Card.Title className=\"dishCardTitle\">\n                    {recipe.name}\n                  </Card.Title>\n                  <Card.Text className=\"dishCardText\">\n                    <i>{recipe.ingredients}</i>\n                  </Card.Text>\n                  {recipe.link != \"\" ? (\n                    <Card.Link\n                      className=\"dishCardLink\"\n                      href={recipe.link}\n                      target=\"_blank\"\n                    >\n                      Se opskrift\n                    </Card.Link>\n                  ) : (\n                    \"\"\n                  )}\n                </Card.Body>\n              </Card>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}