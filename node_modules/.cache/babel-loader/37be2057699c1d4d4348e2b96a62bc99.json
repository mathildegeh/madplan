{"ast":null,"code":"var _jsxFileName = \"/Users/mathilde/Documents/kode/madplan/src/components/allRecipes.js\";\nimport recipes from \"../data/recipes.json\";\nimport React, { useState } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport Buttons from \"./buttons\"; // function that maps out all of the recipes from the data\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Recipes() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dishCardsContainer\",\n    children: recipes.map(recipe => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: \"dishCard\",\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              className: \"dishCardTitle\",\n              children: recipe.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 17,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              className: \"dishCardText\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                children: recipe.ingredients\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 19,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 18,\n              columnNumber: 17\n            }, this), recipe.link != \"\" ? /*#__PURE__*/_jsxDEV(Card.Link, {\n              className: \"dishCardLink\",\n              href: recipe.link,\n              target: \"_blank\",\n              children: \"Se opskrift\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 19\n            }, this) : \"\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 13\n        }, this)\n      }, recipe.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n_c = Recipes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Recipes\");","map":{"version":3,"names":["recipes","React","useState","Card","Button","Buttons","Recipes","map","recipe","name","ingredients","link","id"],"sources":["/Users/mathilde/Documents/kode/madplan/src/components/allRecipes.js"],"sourcesContent":["import recipes from \"../data/recipes.json\";\nimport React, { useState } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport Buttons from \"./buttons\";\n\n// function that maps out all of the recipes from the data\n\nexport function Recipes() {\n  return (\n    <div className=\"dishCardsContainer\">\n      {recipes.map((recipe) => {\n        return (\n          <div key={recipe.id}>\n            <Card className=\"dishCard\">\n              <Card.Body>\n                <Card.Title className=\"dishCardTitle\">{recipe.name}</Card.Title>\n                <Card.Text className=\"dishCardText\">\n                  <i>{recipe.ingredients}</i>\n                </Card.Text>\n                {recipe.link != \"\" ? (\n                  <Card.Link\n                    className=\"dishCardLink\"\n                    href={recipe.link}\n                    target=\"_blank\"\n                  >\n                    Se opskrift\n                  </Card.Link>\n                ) : (\n                  \"\"\n                )}\n              </Card.Body>\n            </Card>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n"],"mappings":";AAAA,OAAOA,OAAP,MAAoB,sBAApB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,OAAP,MAAoB,WAApB,C,CAEA;;;AAEA,OAAO,SAASC,OAAT,GAAmB;EACxB,oBACE;IAAK,SAAS,EAAC,oBAAf;IAAA,UACGN,OAAO,CAACO,GAAR,CAAaC,MAAD,IAAY;MACvB,oBACE;QAAA,uBACE,QAAC,IAAD;UAAM,SAAS,EAAC,UAAhB;UAAA,uBACE,QAAC,IAAD,CAAM,IAAN;YAAA,wBACE,QAAC,IAAD,CAAM,KAAN;cAAY,SAAS,EAAC,eAAtB;cAAA,UAAuCA,MAAM,CAACC;YAA9C;cAAA;cAAA;cAAA;YAAA,QADF,eAEE,QAAC,IAAD,CAAM,IAAN;cAAW,SAAS,EAAC,cAArB;cAAA,uBACE;gBAAA,UAAID,MAAM,CAACE;cAAX;gBAAA;gBAAA;gBAAA;cAAA;YADF;cAAA;cAAA;cAAA;YAAA,QAFF,EAKGF,MAAM,CAACG,IAAP,IAAe,EAAf,gBACC,QAAC,IAAD,CAAM,IAAN;cACE,SAAS,EAAC,cADZ;cAEE,IAAI,EAAEH,MAAM,CAACG,IAFf;cAGE,MAAM,EAAC,QAHT;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QADD,GASC,EAdJ;UAAA;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA;MADF,GAAUH,MAAM,CAACI,EAAjB;QAAA;QAAA;QAAA;MAAA,QADF;IAuBD,CAxBA;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AA6BD;KA9BeN,O"},"metadata":{},"sourceType":"module"}