{"ast":null,"code":"var _jsxFileName = \"/Users/mathilde/Desktop/madplan/src/components/allRecipes.js\",\n    _s = $RefreshSig$();\n\nimport recipes from \"../data/recipes.json\";\nimport React, { useState } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function Recipes() {\n  _s();\n\n  const menuItems = [...new Set(recipes.map(recipe => recipe.ingredients))];\n  const [item, setItem] = useState(recipes);\n\n  const Buttons = _ref => {\n    let {\n      setItem,\n      menuItems\n    } = _ref;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-center\",\n        children: [menuItems.map((Val, id) => {\n          return /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-dark text-white p-1 px-2 mx-5 btn fw-bold\",\n            onClick: () => filterItem(Val),\n            children: Val\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 15\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-dark text-white p-1 px-3 mx-5 fw-bold btn\",\n          onClick: () => setItem(recipes),\n          children: \"All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  };\n\n  const filterItem = curcat => {\n    const newItem = recipes.filter(newVal => {\n      return newVal.category === curcat; // comparing category for displaying data\n    });\n    setItem(newItem);\n  }; // function that maps out all of the recipes from the data\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Buttons, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dishCardContainer\",\n      children: recipes.map(recipe => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dishCard\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            style: {\n              width: \"18rem\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                className: \"dishCardTitle\",\n                children: recipe.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  children: recipe.ingredients\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Card.Link, {\n                href: recipe.link,\n                target: \"_blank\",\n                children: recipe.link\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this)\n        }, recipe.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Recipes, \"e2z5zoGE9b5/m0xPwU8muFuhRuQ=\");\n\n_c = Recipes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Recipes\");","map":{"version":3,"names":["recipes","React","useState","Card","Recipes","menuItems","Set","map","recipe","ingredients","item","setItem","Buttons","Val","id","filterItem","curcat","newItem","filter","newVal","category","width","name","link"],"sources":["/Users/mathilde/Desktop/madplan/src/components/allRecipes.js"],"sourcesContent":["import recipes from \"../data/recipes.json\";\nimport React, { useState } from \"react\";\nimport Card from \"react-bootstrap/Card\";\n\nexport function Recipes() {\n  const menuItems = [...new Set(recipes.map((recipe) => recipe.ingredients))];\n  const [item, setItem] = useState(recipes);\n\n  const Buttons = ({ setItem, menuItems }) => {\n    return (\n      <>\n        <div className=\"d-flex justify-content-center\">\n          {menuItems.map((Val, id) => {\n            return (\n              <button\n                className=\"btn-dark text-white p-1 px-2 mx-5 btn fw-bold\"\n                onClick={() => filterItem(Val)}\n                key={id}\n              >\n                {Val}\n              </button>\n            );\n          })}\n          <button\n            className=\"btn-dark text-white p-1 px-3 mx-5 fw-bold btn\"\n            onClick={() => setItem(recipes)}\n          >\n            All\n          </button>\n        </div>\n      </>\n    );\n  };\n\n  const filterItem = (curcat) => {\n    const newItem = recipes.filter((newVal) => {\n      return newVal.category === curcat;\n      // comparing category for displaying data\n    });\n    setItem(newItem);\n  };\n\n  // function that maps out all of the recipes from the data\n\n  return (\n    <div>\n      <Buttons />\n      <div className=\"dishCardContainer\">\n        {recipes.map((recipe) => {\n          return (\n            <div className=\"dishCard\" key={recipe.id}>\n              <Card style={{ width: \"18rem\" }}>\n                <Card.Body>\n                  <Card.Title className=\"dishCardTitle\">\n                    {recipe.name}\n                  </Card.Title>\n                  <Card.Text>\n                    <i>{recipe.ingredients}</i>\n                  </Card.Text>\n                  <Card.Link href={recipe.link} target=\"_blank\">\n                    {recipe.link}\n                  </Card.Link>\n                </Card.Body>\n              </Card>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n"],"mappings":";;;AAAA,OAAOA,OAAP,MAAoB,sBAApB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,sBAAjB;;;AAEA,OAAO,SAASC,OAAT,GAAmB;EAAA;;EACxB,MAAMC,SAAS,GAAG,CAAC,GAAG,IAAIC,GAAJ,CAAQN,OAAO,CAACO,GAAR,CAAaC,MAAD,IAAYA,MAAM,CAACC,WAA/B,CAAR,CAAJ,CAAlB;EACA,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAACF,OAAD,CAAhC;;EAEA,MAAMY,OAAO,GAAG,QAA4B;IAAA,IAA3B;MAAED,OAAF;MAAWN;IAAX,CAA2B;IAC1C,oBACE;MAAA,uBACE;QAAK,SAAS,EAAC,+BAAf;QAAA,WACGA,SAAS,CAACE,GAAV,CAAc,CAACM,GAAD,EAAMC,EAAN,KAAa;UAC1B,oBACE;YACE,SAAS,EAAC,+CADZ;YAEE,OAAO,EAAE,MAAMC,UAAU,CAACF,GAAD,CAF3B;YAAA,UAKGA;UALH,GAGOC,EAHP;YAAA;YAAA;YAAA;UAAA,QADF;QASD,CAVA,CADH,eAYE;UACE,SAAS,EAAC,+CADZ;UAEE,OAAO,EAAE,MAAMH,OAAO,CAACX,OAAD,CAFxB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAZF;MAAA;QAAA;QAAA;QAAA;MAAA;IADF,iBADF;EAuBD,CAxBD;;EA0BA,MAAMe,UAAU,GAAIC,MAAD,IAAY;IAC7B,MAAMC,OAAO,GAAGjB,OAAO,CAACkB,MAAR,CAAgBC,MAAD,IAAY;MACzC,OAAOA,MAAM,CAACC,QAAP,KAAoBJ,MAA3B,CADyC,CAEzC;IACD,CAHe,CAAhB;IAIAL,OAAO,CAACM,OAAD,CAAP;EACD,CAND,CA9BwB,CAsCxB;;;EAEA,oBACE;IAAA,wBACE,QAAC,OAAD;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAK,SAAS,EAAC,mBAAf;MAAA,UACGjB,OAAO,CAACO,GAAR,CAAaC,MAAD,IAAY;QACvB,oBACE;UAAK,SAAS,EAAC,UAAf;UAAA,uBACE,QAAC,IAAD;YAAM,KAAK,EAAE;cAAEa,KAAK,EAAE;YAAT,CAAb;YAAA,uBACE,QAAC,IAAD,CAAM,IAAN;cAAA,wBACE,QAAC,IAAD,CAAM,KAAN;gBAAY,SAAS,EAAC,eAAtB;gBAAA,UACGb,MAAM,CAACc;cADV;gBAAA;gBAAA;gBAAA;cAAA,QADF,eAIE,QAAC,IAAD,CAAM,IAAN;gBAAA,uBACE;kBAAA,UAAId,MAAM,CAACC;gBAAX;kBAAA;kBAAA;kBAAA;gBAAA;cADF;gBAAA;gBAAA;gBAAA;cAAA,QAJF,eAOE,QAAC,IAAD,CAAM,IAAN;gBAAW,IAAI,EAAED,MAAM,CAACe,IAAxB;gBAA8B,MAAM,EAAC,QAArC;gBAAA,UACGf,MAAM,CAACe;cADV;gBAAA;gBAAA;gBAAA;cAAA,QAPF;YAAA;cAAA;cAAA;cAAA;YAAA;UADF;YAAA;YAAA;YAAA;UAAA;QADF,GAA+Bf,MAAM,CAACM,EAAtC;UAAA;UAAA;UAAA;QAAA,QADF;MAiBD,CAlBA;IADH;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AA0BD;;GAlEeV,O;;KAAAA,O"},"metadata":{},"sourceType":"module"}