{"ast":null,"code":"var _jsxFileName = \"/Users/mathilde/Documents/kode/madplan/src/components/allRecipes.js\";\nimport recipes from \"../data/recipes.json\";\nimport React, { useState } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport Buttons from \"./buttons\"; // function that maps out all of the recipes from the data\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function Recipes() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dishCardsContainer\",\n      children: recipes.map(recipe => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: \"dishCard\",\n            children: /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                className: \"dishCardTitle\",\n                children: recipe.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 18,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                className: \"dishCardText\",\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  children: recipe.ingredients\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 22,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 21,\n                columnNumber: 19\n              }, this), recipe.link != \"\" ? /*#__PURE__*/_jsxDEV(Card.Link, {\n                className: \"dishCardLink\",\n                href: recipe.link,\n                target: \"_blank\",\n                children: \"Se opskrift\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 25,\n                columnNumber: 21\n              }, this) : \"\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 17,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 15\n          }, this)\n        }, recipe.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: recipes.filter(ingredients => ingredients.includes(\"oksekød\")).map(filteredName => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: filteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_c = Recipes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Recipes\");","map":{"version":3,"names":["recipes","React","useState","Card","Button","Buttons","Recipes","map","recipe","name","ingredients","link","id","filter","includes","filteredName"],"sources":["/Users/mathilde/Documents/kode/madplan/src/components/allRecipes.js"],"sourcesContent":["import recipes from \"../data/recipes.json\";\nimport React, { useState } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport Buttons from \"./buttons\";\n\n// function that maps out all of the recipes from the data\n\nexport function Recipes() {\n  return (\n    <>\n      <div className=\"dishCardsContainer\">\n        {recipes.map((recipe) => {\n          return (\n            <div key={recipe.id}>\n              <Card className=\"dishCard\">\n                <Card.Body>\n                  <Card.Title className=\"dishCardTitle\">\n                    {recipe.name}\n                  </Card.Title>\n                  <Card.Text className=\"dishCardText\">\n                    <i>{recipe.ingredients}</i>\n                  </Card.Text>\n                  {recipe.link != \"\" ? (\n                    <Card.Link\n                      className=\"dishCardLink\"\n                      href={recipe.link}\n                      target=\"_blank\"\n                    >\n                      Se opskrift\n                    </Card.Link>\n                  ) : (\n                    \"\"\n                  )}\n                </Card.Body>\n              </Card>\n            </div>\n          );\n        })}\n      </div>\n      <div>\n        {recipes\n          .filter((ingredients) => ingredients.includes(\"oksekød\"))\n          .map((filteredName) => (\n            <li>{filteredName}</li>\n          ))}\n      </div>\n    </>\n  );\n}\n"],"mappings":";AAAA,OAAOA,OAAP,MAAoB,sBAApB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,OAAP,MAAoB,WAApB,C,CAEA;;;;AAEA,OAAO,SAASC,OAAT,GAAmB;EACxB,oBACE;IAAA,wBACE;MAAK,SAAS,EAAC,oBAAf;MAAA,UACGN,OAAO,CAACO,GAAR,CAAaC,MAAD,IAAY;QACvB,oBACE;UAAA,uBACE,QAAC,IAAD;YAAM,SAAS,EAAC,UAAhB;YAAA,uBACE,QAAC,IAAD,CAAM,IAAN;cAAA,wBACE,QAAC,IAAD,CAAM,KAAN;gBAAY,SAAS,EAAC,eAAtB;gBAAA,UACGA,MAAM,CAACC;cADV;gBAAA;gBAAA;gBAAA;cAAA,QADF,eAIE,QAAC,IAAD,CAAM,IAAN;gBAAW,SAAS,EAAC,cAArB;gBAAA,uBACE;kBAAA,UAAID,MAAM,CAACE;gBAAX;kBAAA;kBAAA;kBAAA;gBAAA;cADF;gBAAA;gBAAA;gBAAA;cAAA,QAJF,EAOGF,MAAM,CAACG,IAAP,IAAe,EAAf,gBACC,QAAC,IAAD,CAAM,IAAN;gBACE,SAAS,EAAC,cADZ;gBAEE,IAAI,EAAEH,MAAM,CAACG,IAFf;gBAGE,MAAM,EAAC,QAHT;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QADD,GASC,EAhBJ;YAAA;cAAA;cAAA;cAAA;YAAA;UADF;YAAA;YAAA;YAAA;UAAA;QADF,GAAUH,MAAM,CAACI,EAAjB;UAAA;UAAA;UAAA;QAAA,QADF;MAyBD,CA1BA;IADH;MAAA;MAAA;MAAA;IAAA,QADF,eA8BE;MAAA,UACGZ,OAAO,CACLa,MADF,CACUH,WAAD,IAAiBA,WAAW,CAACI,QAAZ,CAAqB,SAArB,CAD1B,EAEEP,GAFF,CAEOQ,YAAD,iBACH;QAAA,UAAKA;MAAL;QAAA;QAAA;QAAA;MAAA,QAHH;IADH;MAAA;MAAA;MAAA;IAAA,QA9BF;EAAA,gBADF;AAwCD;KAzCeT,O"},"metadata":{},"sourceType":"module"}