{"ast":null,"code":"import _slicedToArray from\"/Users/mathilde/Documents/kode/madplan/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import recipes from\"../data/recipes.json\";import{Filter}from\"./filter\";import React,{useState}from\"react\";import{Card}from\"react-bootstrap\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export function Mealplan(){var _useState=useState(),_useState2=_slicedToArray(_useState,2),numDishes=_useState2[0],setNumDishes=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),showIngredients=_useState4[0],setShowIngredients=_useState4[1];// if numDishes is not set or equal to 0, ask to set number of dishes\nif(!numDishes||numDishes===0){return/*#__PURE__*/_jsx(\"div\",{className:\"dishContainer\",children:/*#__PURE__*/_jsx(Filter,{onChangeNumDishes:setNumDishes,inputValue:\"\"})});}// if numDishes is larger than the number of recipes, alert error message and reset numDishes\nif(numDishes>recipes.length){return/*#__PURE__*/_jsxs(\"div\",{className:\"centeredContainer\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"Hov. S\\xE5 mange opskrifter kender jeg slet ikke \\uD83D\\uDE14\"}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return setNumDishes(0);},children:\"Pr\\xF8v igen\"})]});}// load all recipes from the data file and store them in an array\nvar allRecipes=recipes.map(function(recipe){return recipe;});// based on the number of dishes, pick random recipes from the array\n// no duplicates\nvar randomRecipes=[];for(var i=0;i<numDishes;i++){var randomRecipe=allRecipes[Math.floor(Math.random()*allRecipes.length)];if(!randomRecipes.includes(randomRecipe)){randomRecipes.push(randomRecipe);}}// display the week number\nvar currentDate=new Date();var startDate=new Date(currentDate.getFullYear(),0,1);var days=Math.floor((currentDate-startDate)/(24*60*60*1000));var weekNumber=Math.ceil(days/7);// export the random recipes as a text file\nvar downloadRecipes=function downloadRecipes(){var text=randomRecipes.map(function(recipe){// if there's no link, map only the name of the recipe\nif(!recipe.link){return\"\".concat(recipe.name);}// if there's a link, map the name and the link separeted by a dash\nreturn\"\".concat(recipe.name,\" - \").concat(recipe.link);}).join(\"\\n\");var blob=new Blob([text],{type:\"text/plain\"});var url=URL.createObjectURL(blob);var link=document.createElement(\"a\");link.href=url;link.download=\"madplan.txt\";link.click();};// make a comma separated list of the ingredients in the random recipes\nvar ingredients=randomRecipes.map(function(recipe){return recipe.ingredients;}// join the ingredients into one string\n).join(\", \");// sort the ingredients alphabetically\nvar sortedIngredients=ingredients.split(\", \").sort().join(\", \");// make a list of the sorted ingredients and count how many times each ingredient is used\nvar ingredientList=sortedIngredients.split(\", \");var ingredientCount={};ingredientList.forEach(function(ingredient){ingredientCount[ingredient]=(ingredientCount[ingredient]||0)+1;});// sort ingredient count by alphabetical order\nvar sortedIngredientCount=Object.entries(ingredientCount);sortedIngredientCount.sort(function(a,b){if(a[0]<b[0]){return-1;}if(a[0]>b[0]){return 1;}return 0;});// button that returns the ingredients as a text file\nvar downloadIngredients=function downloadIngredients(){var text=sortedIngredientCount.map(function(ingredient){if(ingredient[1]>1){return\"\".concat(ingredient[1],\"x \").concat(ingredient[0]);}else{return\"\".concat(ingredient[0]);}})// join the ingredients into one string\n.join(\"\\n\");var blob=new Blob([text],{type:\"text/plain\"});var url=URL.createObjectURL(blob);var link=document.createElement(\"a\");link.href=url;link.download=\"ingredienser.txt\";link.click();};// return the array of random recipes\nreturn/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Filter,{onChangeNumDishes:function onChangeNumDishes(numDishes){return setNumDishes(numDishes);},resetNumDishes:function resetNumDishes(){return setNumDishes(0);},inputValue:numDishes}),/*#__PURE__*/_jsx(\"div\",{className:\"dishList\",children:randomRecipes.map(function(recipe){return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Card,{className:\"dishListCard\",children:/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsx(Card.Title,{className:\"dishListCardTitle\",children:recipe.name}),/*#__PURE__*/_jsx(Card.Text,{className:\"dishCardText\",children:/*#__PURE__*/_jsx(\"i\",{children:recipe.ingredients})}),recipe.link!==\"\"?/*#__PURE__*/_jsx(Card.Link,{className:\"dishCardLink\",href:recipe.link,target:\"_blank\",children:\"Se opskrift\"}):\"\"]})})},recipe.id);})}),/*#__PURE__*/_jsx(\"div\",{className:\"centeredContainer\",children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"button\",{onClick:downloadIngredients,children:\"Hent ingrediensliste\"}),/*#__PURE__*/_jsx(\"button\",{onClick:downloadRecipes,children:\"Hent madplan\"})]})})]});}","map":{"version":3,"names":["recipes","Filter","React","useState","Card","Mealplan","numDishes","setNumDishes","showIngredients","setShowIngredients","length","allRecipes","map","recipe","randomRecipes","i","randomRecipe","Math","floor","random","includes","push","currentDate","Date","startDate","getFullYear","days","weekNumber","ceil","downloadRecipes","text","link","name","join","blob","Blob","type","url","URL","createObjectURL","document","createElement","href","download","click","ingredients","sortedIngredients","split","sort","ingredientList","ingredientCount","forEach","ingredient","sortedIngredientCount","Object","entries","a","b","downloadIngredients","id"],"sources":["/Users/mathilde/Documents/kode/madplan/src/components/makeMealplan.js"],"sourcesContent":["import recipes from \"../data/recipes.json\";\nimport { Filter } from \"./filter\";\nimport React, { useState } from \"react\";\nimport { Card } from \"react-bootstrap\";\n\nexport function Mealplan() {\n  const [numDishes, setNumDishes] = useState();\n  const [showIngredients, setShowIngredients] = useState(false);\n\n  // if numDishes is not set or equal to 0, ask to set number of dishes\n  if (!numDishes || numDishes === 0) {\n    return (\n      <div className=\"dishContainer\">\n        <Filter onChangeNumDishes={setNumDishes} inputValue={\"\"} />\n      </div>\n    );\n  }\n\n  // if numDishes is larger than the number of recipes, alert error message and reset numDishes\n  if (numDishes > recipes.length) {\n    return (\n      <div className=\"centeredContainer\">\n        <p>Hov. SÃ¥ mange opskrifter kender jeg slet ikke ðŸ˜”</p>\n        <button onClick={() => setNumDishes(0)}>PrÃ¸v igen</button>\n      </div>\n    );\n  }\n\n  // load all recipes from the data file and store them in an array\n  const allRecipes = recipes.map((recipe) => {\n    return recipe;\n  });\n\n  // based on the number of dishes, pick random recipes from the array\n  // no duplicates\n  const randomRecipes = [];\n  for (let i = 0; i < numDishes; i++) {\n    let randomRecipe =\n      allRecipes[Math.floor(Math.random() * allRecipes.length)];\n    if (!randomRecipes.includes(randomRecipe)) {\n      randomRecipes.push(randomRecipe);\n    }\n  }\n\n  // display the week number\n  let currentDate = new Date();\n  let startDate = new Date(currentDate.getFullYear(), 0, 1);\n  var days = Math.floor((currentDate - startDate) / (24 * 60 * 60 * 1000));\n  var weekNumber = Math.ceil(days / 7);\n\n  // export the random recipes as a text file\n  const downloadRecipes = () => {\n    const text = randomRecipes\n      .map((recipe) => {\n        // if there's no link, map only the name of the recipe\n        if (!recipe.link) {\n          return `${recipe.name}`;\n        }\n        // if there's a link, map the name and the link separeted by a dash\n        return `${recipe.name} - ${recipe.link}`;\n      })\n      .join(\"\\n\");\n\n    const blob = new Blob([text], {\n      type: \"text/plain\",\n    });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement(\"a\");\n    link.href = url;\n    link.download = \"madplan.txt\";\n    link.click();\n  };\n\n  // make a comma separated list of the ingredients in the random recipes\n  const ingredients = randomRecipes\n    .map(\n      (recipe) => {\n        return recipe.ingredients;\n      }\n      // join the ingredients into one string\n    )\n    .join(\", \");\n\n  // sort the ingredients alphabetically\n  const sortedIngredients = ingredients.split(\", \").sort().join(\", \");\n\n  // make a list of the sorted ingredients and count how many times each ingredient is used\n  const ingredientList = sortedIngredients.split(\", \");\n  const ingredientCount = {};\n  ingredientList.forEach((ingredient) => {\n    ingredientCount[ingredient] = (ingredientCount[ingredient] || 0) + 1;\n  });\n\n  // sort ingredient count by alphabetical order\n  const sortedIngredientCount = Object.entries(ingredientCount);\n  sortedIngredientCount.sort((a, b) => {\n    if (a[0] < b[0]) {\n      return -1;\n    }\n    if (a[0] > b[0]) {\n      return 1;\n    }\n    return 0;\n  });\n\n  // button that returns the ingredients as a text file\n  const downloadIngredients = () => {\n    const text = sortedIngredientCount\n      .map((ingredient) => {\n        if (ingredient[1] > 1) {\n          return `${ingredient[1]}x ${ingredient[0]}`;\n        } else {\n          return `${ingredient[0]}`;\n        }\n      })\n\n      // join the ingredients into one string\n      .join(\"\\n\");\n\n    const blob = new Blob([text], {\n      type: \"text/plain\",\n    });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement(\"a\");\n    link.href = url;\n    link.download = \"ingredienser.txt\";\n    link.click();\n  };\n\n  // return the array of random recipes\n  return (\n    <div>\n      <Filter\n        onChangeNumDishes={(numDishes) => setNumDishes(numDishes)}\n        resetNumDishes={() => setNumDishes(0)}\n        inputValue={numDishes}\n      />\n      <div className=\"dishList\">\n        {randomRecipes.map((recipe) => {\n          return (\n            <div key={recipe.id}>\n              <Card className=\"dishListCard\">\n                <Card.Body>\n                  <Card.Title className=\"dishListCardTitle\">\n                    {recipe.name}\n                  </Card.Title>\n                  <Card.Text className=\"dishCardText\">\n                    <i>{recipe.ingredients}</i>\n                  </Card.Text>\n                  {recipe.link !== \"\" ? (\n                    <Card.Link\n                      className=\"dishCardLink\"\n                      href={recipe.link}\n                      target=\"_blank\"\n                    >\n                      Se opskrift\n                    </Card.Link>\n                  ) : (\n                    \"\"\n                  )}\n                </Card.Body>\n              </Card>\n            </div>\n          );\n        })}\n      </div>\n\n      <div className=\"centeredContainer\">\n        <div>\n          <button onClick={downloadIngredients}>Hent ingrediensliste</button>\n          <button onClick={downloadRecipes}>Hent madplan</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}