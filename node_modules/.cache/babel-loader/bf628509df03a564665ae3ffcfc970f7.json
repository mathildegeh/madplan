{"ast":null,"code":"var _jsxFileName = \"/Users/mathilde/Desktop/madplan/src/components/filter.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport recipes from \"../data/recipes.json\"; // inputfield that asks for number of recipes to display\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Filter(props) {\n  _s();\n\n  const [numDishes, setNumDishes] = useState();\n\n  const handleUserInput = e => {\n    setNumDishes(e.target.value);\n  };\n\n  const resetValue = () => {\n    setNumDishes(\"\");\n  }; // if numDishes is not set or equal to 0, ask to set number of dishes\n\n\n  if (!numDishes || numDishes === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dishContainer\",\n      children: /*#__PURE__*/_jsxDEV(Filter, {\n        onChangeNumDishes: setNumDishes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this);\n  } // if numDishes is larger than the number of recipes, alert error message and reset numDishes\n\n\n  if (numDishes > recipes.length) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centeredContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Hov. S\\xE5 mange opskrifter kender jeg slet ikke \\uD83D\\uDE14\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setNumDishes(0),\n        children: \"Pr\\xF8v igen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this);\n  } // load all recipes from the data file and store them in an array\n\n\n  const allRecipes = recipes.map(recipe => {\n    return recipe;\n  }); // based on the number of dishes, pick random recipes from the array\n  // no duplicates\n\n  const randomRecipes = [];\n\n  for (let i = 0; i < numDishes; i++) {\n    let randomRecipe = allRecipes[Math.floor(Math.random() * allRecipes.length)];\n\n    if (!randomRecipes.includes(randomRecipe)) {\n      randomRecipes.push(randomRecipe);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centeredContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Hvor mange retter skal du bruge? \\uD83E\\uDDD1\\u200D\\uD83C\\uDF73\\uD83D\\uDE0B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: numDishes,\n        placeholder: \"indtast antal, fx 3\",\n        onChange: handleUserInput,\n        className: \"boxLarge\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => resetValue,\n        children: \"Nulstil\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dishList\",\n      children: randomRecipes.map(recipe => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dishListItem\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: recipe.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"dishCardText\",\n            children: [\"Ingredienser: \", recipe.ingredients]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: recipe.link,\n            target: \"_blank\",\n            children: recipe.link\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this)]\n        }, recipe.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Filter, \"ZWnz/sn1XN3mgI3kTkaA51XG7Z4=\");\n\n_c = Filter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Filter\");","map":{"version":3,"names":["React","useState","recipes","Filter","props","numDishes","setNumDishes","handleUserInput","e","target","value","resetValue","length","allRecipes","map","recipe","randomRecipes","i","randomRecipe","Math","floor","random","includes","push","name","ingredients","link","id"],"sources":["/Users/mathilde/Desktop/madplan/src/components/filter.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport recipes from \"../data/recipes.json\";\n\n// inputfield that asks for number of recipes to display\nexport function Filter(props) {\n  const [numDishes, setNumDishes] = useState();\n\n  const handleUserInput = (e) => {\n    setNumDishes(e.target.value);\n  };\n\n  const resetValue = () => {\n    setNumDishes(\"\");\n  };\n\n  // if numDishes is not set or equal to 0, ask to set number of dishes\n  if (!numDishes || numDishes === 0) {\n    return (\n      <div className=\"dishContainer\">\n        <Filter onChangeNumDishes={setNumDishes} />\n      </div>\n    );\n  }\n\n  // if numDishes is larger than the number of recipes, alert error message and reset numDishes\n  if (numDishes > recipes.length) {\n    return (\n      <div className=\"centeredContainer\">\n        <p>Hov. S√• mange opskrifter kender jeg slet ikke üòî</p>\n        <button onClick={() => setNumDishes(0)}>Pr√∏v igen</button>\n      </div>\n    );\n  }\n\n  // load all recipes from the data file and store them in an array\n  const allRecipes = recipes.map((recipe) => {\n    return recipe;\n  });\n\n  // based on the number of dishes, pick random recipes from the array\n  // no duplicates\n  const randomRecipes = [];\n  for (let i = 0; i < numDishes; i++) {\n    let randomRecipe =\n      allRecipes[Math.floor(Math.random() * allRecipes.length)];\n    if (!randomRecipes.includes(randomRecipe)) {\n      randomRecipes.push(randomRecipe);\n    }\n  }\n\n  return (\n    <div>\n      <div className=\"centeredContainer\">\n        <p>Hvor mange retter skal du bruge? üßë‚Äçüç≥üòã</p>\n        <input\n          type=\"number\"\n          value={numDishes}\n          placeholder=\"indtast antal, fx 3\"\n          onChange={handleUserInput}\n          className=\"boxLarge\"\n        />\n        <button onClick={() => resetValue}>Nulstil</button>\n      </div>\n      <div className=\"dishList\">\n        {randomRecipes.map((recipe) => {\n          return (\n            <div className=\"dishListItem\" key={recipe.id}>\n              <h3>{recipe.name}</h3>\n              <p className=\"dishCardText\">Ingredienser: {recipe.ingredients}</p>\n              <a href={recipe.link} target=\"_blank\">\n                {recipe.link}\n              </a>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}