{"ast":null,"code":"var _jsxFileName = \"/Users/mathilde.gehring/Documents/GitHub/madplan/src/components/dishes.js\",\n    _s = $RefreshSig$();\n\nimport recipes from \"../data/recipes.json\";\nimport { Filter } from \"./filter\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Dishes() {\n  _s();\n\n  const [numDishes, setNumDishes] = useState(); // if numDishes is not set or equal to 0, ask to set number of dishes\n\n  if (!numDishes || numDishes === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dishContainer\",\n      children: /*#__PURE__*/_jsxDEV(Filter, {\n        onChangeNumDishes: setNumDishes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this);\n  } // if numDishes is set, show number of dishes randomly selected from recipes\n\n\n  const randomRecipes = recipes.sort(() => 0.5 - Math.random()).slice(0, numDishes);\n  console.log(randomRecipes);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dishContainer\",\n    children: /*#__PURE__*/_jsxDEV(Filter, {\n      onChangeNumDishes: numDishes => setNumDishes(numDishes)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Dishes, \"ZWnz/sn1XN3mgI3kTkaA51XG7Z4=\");\n\n_c = Dishes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dishes\");","map":{"version":3,"names":["recipes","Filter","React","useState","Dishes","numDishes","setNumDishes","randomRecipes","sort","Math","random","slice","console","log"],"sources":["/Users/mathilde.gehring/Documents/GitHub/madplan/src/components/dishes.js"],"sourcesContent":["import recipes from \"../data/recipes.json\";\nimport { Filter } from \"./filter\";\nimport React, { useState } from \"react\";\n\nexport function Dishes() {\n  const [numDishes, setNumDishes] = useState();\n\n  // if numDishes is not set or equal to 0, ask to set number of dishes\n  if (!numDishes || numDishes === 0) {\n    return (\n      <div className=\"dishContainer\">\n        <Filter onChangeNumDishes={setNumDishes} />\n      </div>\n    );\n  }\n\n  // if numDishes is set, show number of dishes randomly selected from recipes\n  const randomRecipes = recipes\n    .sort(() => 0.5 - Math.random())\n    .slice(0, numDishes);\n\n  console.log(randomRecipes);\n\n  return (\n    <div className=\"dishContainer\">\n      <Filter onChangeNumDishes={(numDishes) => setNumDishes(numDishes)} />\n    </div>\n  );\n}\n"],"mappings":";;;AAAA,OAAOA,OAAP,MAAoB,sBAApB;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,OAAO,SAASC,MAAT,GAAkB;EAAA;;EACvB,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BH,QAAQ,EAA1C,CADuB,CAGvB;;EACA,IAAI,CAACE,SAAD,IAAcA,SAAS,KAAK,CAAhC,EAAmC;IACjC,oBACE;MAAK,SAAS,EAAC,eAAf;MAAA,uBACE,QAAC,MAAD;QAAQ,iBAAiB,EAAEC;MAA3B;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF;EAKD,CAVsB,CAYvB;;;EACA,MAAMC,aAAa,GAAGP,OAAO,CAC1BQ,IADmB,CACd,MAAM,MAAMC,IAAI,CAACC,MAAL,EADE,EAEnBC,KAFmB,CAEb,CAFa,EAEVN,SAFU,CAAtB;EAIAO,OAAO,CAACC,GAAR,CAAYN,aAAZ;EAEA,oBACE;IAAK,SAAS,EAAC,eAAf;IAAA,uBACE,QAAC,MAAD;MAAQ,iBAAiB,EAAGF,SAAD,IAAeC,YAAY,CAACD,SAAD;IAAtD;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAKD;;GAxBeD,M;;KAAAA,M"},"metadata":{},"sourceType":"module"}